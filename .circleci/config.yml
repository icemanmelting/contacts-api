version: 2 # use CircleCI 2.0
jobs: # basic units of work in a run
  build: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/contacts-api # directory where steps will run

    docker: # run the steps with Docker
      - image: circleci/clojure:lein-2.8.1 # ...with this image as the primary container; this is where all `steps` will run
        environment: # environment variables for primary container
          LEIN_ROOT: nbd
          JVM_OPTS: -Xmx3200m # limit the maximum heap size to prevent out of memory errors

      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: contacts_api_test

    steps: # commands that comprise the `build` job
    - checkout # check out source code to working directory

    - restore_cache: # restores saved cache if checksum hasn't changed since the last run
        key: contacts-api-{{ checksum "project.clj" }}

    - run: lein deps

    - save_cache: # generate and store cache in the .m2 directory using a key template
        paths:
        - ~/.m2
        key: contacts-api-{{ checksum "project.clj" }}

    - run:
      name: Database Setup
      command: |
        bundle exec rake db:create
        bundle exec rake db:structure:load

    - run: lein do test, uberjar

    - store_artifacts: # upload test results for display in Test Summary
        path: target/uberjar/contacts-api.jar
        destination: uberjar
