version: 2 # use CircleCI 2.0
jobs: # basic units of work in a run
  build: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/contacts-api # directory where steps will run

    docker: # run the steps with Docker
    - image: circleci/clojure:lein-2.8.1 # ...with this image as the primary container; this is where all `steps` will run
      environment: # environment variables for primary container
        LEIN_ROOT: nbd
        JVM_OPTS: -Xmx3200m # limit the maximum heap size to prevent out of memory errors

    - image: postgres:9.6.2
      environment:
        POSTGRES_USER: postgres
        POSTGRES_DB: contacts_api_test
        POSTGRES_PASSWORD: postgres

    steps: # commands that comprise the `build` job
    - checkout # check out source code to working directory

    - restore_cache: # restores saved cache if checksum hasn't changed since the last run
        key: contacts-api-{{ checksum "project.clj" }}

    - run: lein deps

    - save_cache: # generate and store cache in the .m2 directory using a key template
        paths:
        - ~/.m2
        - ~/.lein
        key: contacts-api-{{ checksum "project.clj" }}

    - run: sudo apt install -y postgresql-client || true

    - run:
        name: Waiting for PostgreSQL to start
        command: |
          for i in `seq 1 10`;
          do
            nc -z localhost 5432 && echo Success && exit 0
            echo -n .
            sleep 2
          done
          echo Failed waiting for Postgres && exit 1

    - run: psql -U postgres -h localhost -p 5432 -d contacts_api_test -a -f ~/contacts-api/resources/postgres-schema.sql

    - run: lein do test, uberjar

    - store_artifacts: # upload test results for display in Test Summary
        path: target/uberjar/contacts-api.jar
        destination: uberjar
